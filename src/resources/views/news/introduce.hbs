<div id="introduce-container">
    <div id="introduce-wrapper">
        <p>Cảm ơn bạn đã tham gia cộng đồng Văn Lang Gifts. Hãy cùng chúng tôi trao tặng những món quà ý nghĩa đến với
            mọi người.</p>
        <p>Van Lang Gifts ra mắt vào ngày 11/4/2022. Giúp cho tất cả các bạn sinh viên Văn Lang có thể chia sẻ,
            trao đổi các món đồ đã qua sử dụng với nhau, cùng nhau xây dựng một môi trường giao lưu, hỗ trợ thân thương.
        </p>
        <p>Bạn có muốn cùng tham gia với chúng tôi ? <a href="#" onclick="callSocket1()">Tham gia</a></p>
        <p>Bạn có muốn cùng tham gia với chúng tôi ? <a href="#" onclick="callSocket2()">Đồng ý</a></p>
        <p>Bạn có muốn cùng tham gia với chúng tôi ? <a href="#" onclick="disconnect()">Disconnect</a></p>
        <img src="/public/img/moqua.png" alt="" />
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
<script src="/socket.io/socket.io.js"></script>

<script>
    var socket = io.connect("http://localhost:5100", {
        closeOnBeforeunload: false // defaults to true
    });
    //var socket = io.connect("https://api-socket.test.voolo.vn");
    console.log('Hello World')
    console.log(socket);
    // var phone = '0972579495' // Số điện thoại người dùng;

    // localStorage.setItem("phone", phone);
    let phone_local = localStorage.getItem("phone");

    socket.emit("sendPhone", phone_local) // Gửi số đt lên Socket server
    socket.on(phone_local, data => console.log(data));  // Nhận data

    console.log('phone_local: ', phone_local)

    // window.onbeforeunload = () => {
    //     alert('Huy ket noi')
    //     setTimeout(() => {
    //         socket.emit("disconnect" + phone_local, phone_local)
    //     }, 1000)
    // }
    // window.addEventListener("beforeunload", function (event) { if (!intentionalForward) { event.preventDefault(); event.returnValue = " " } });
    window.addEventListener("unload", function () { socket.emit("disconnect" + phone_local, phone_local) });

    socket.on('disconnect', () => console.log('Da disconnect'))

    function disconnect() {
        console.log('Call updateCount')
        setTimeout(() => {
            socket.emit("disconnect" + phone_local, phone_local)
        }, 1000)
    }

    function callSocket1() {
        console.log('Call updateCount')
        socket.emit('updateCount', phone_local)
    }

    function callSocket2() {
        socket.emit('updateIsRead', { phone: phone_local, idNotic: '65ix7d43', isRead: 1 })
    }


</script>